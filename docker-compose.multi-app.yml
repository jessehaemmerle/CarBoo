# Example configuration for multiple applications on one VPS
# This shows how to run FleetManager Pro alongside other applications

version: '3.8'

services:
  # Traefik Reverse Proxy (Shared across all applications)
  traefik:
    image: traefik:v3.0
    container_name: traefik_main
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-network
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.dashboard=true
      - --api.insecure=false
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --log.level=INFO
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_acme:/acme.json
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${MAIN_DOMAIN}`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"

  # Example: Another Application (e.g., WordPress)
  # wordpress:
  #   image: wordpress:latest
  #   container_name: wordpress_app
  #   restart: unless-stopped
  #   environment:
  #     WORDPRESS_DB_HOST: wordpress_db
  #     WORDPRESS_DB_USER: wordpress
  #     WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
  #     WORDPRESS_DB_NAME: wordpress
  #   networks:
  #     - traefik-network
  #     - wordpress-internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.wordpress.rule=Host(`blog.${MAIN_DOMAIN}`)"
  #     - "traefik.http.routers.wordpress.tls.certresolver=letsencrypt"
  #     - "traefik.http.services.wordpress.loadbalancer.server.port=80"

  # Example: API Application (e.g., Node.js API)
  # api_app:
  #   image: node:20-alpine
  #   container_name: api_app
  #   restart: unless-stopped
  #   networks:
  #     - traefik-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.api.rule=Host(`api.${MAIN_DOMAIN}`)"
  #     - "traefik.http.routers.api.tls.certresolver=letsencrypt"
  #     - "traefik.http.services.api.loadbalancer.server.port=3000"

volumes:
  traefik_acme:
    driver: local

networks:
  traefik-network:
    external: true
  # wordpress-internal:
  #   driver: bridge

# To add FleetManager Pro to this setup:
# 1. Run: docker-compose -f docker-compose.traefik.yml --env-file .env.domain up -d
# 2. FleetManager will connect to the same traefik-network
# 3. Configure your domain in .env.domain (e.g., fleet.yourdomain.com)
# 4. Each application gets its own subdomain or domain