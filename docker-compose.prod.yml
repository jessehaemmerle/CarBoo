version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: fleet_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: fleet_db
    volumes:
      - mongodb_data_prod:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - fleet_network_prod
    # Don't expose port in production - only internal access

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: fleet_backend_prod
    restart: always
    environment:
      - MONGO_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/fleet_db?authSource=admin
      - DB_NAME=fleet_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENVIRONMENT=production
    depends_on:
      - mongodb
    networks:
      - fleet_network_prod
    # Don't expose port - access through nginx

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_BACKEND_URL=${BACKEND_URL}
    container_name: fleet_frontend_prod
    restart: always
    depends_on:
      - backend
    networks:
      - fleet_network_prod
    # Don't expose port - access through nginx

  nginx:
    image: nginx:alpine
    container_name: fleet_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - fleet_network_prod

volumes:
  mongodb_data_prod:
    driver: local

networks:
  fleet_network_prod:
    driver: bridge